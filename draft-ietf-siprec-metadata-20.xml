<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629xslt/rfc2629.dtd" [
      <!ENTITY rfc3667 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3667.xml'>
    ]>
<?rfc toc='yes'?>
<?rfc tocdepth='4'?>
<?rfc compact="yes"?>
<!--rfc category="info" ipr="full3978"-->
<rfc category="std" docName="draft-ietf-siprec-metadata-21" 
ipr="trust200902">
	<front>
		<title abbrev="SIP Recording Metadata">Session Initiation Protocol (SIP) Recording Metadata</title>
		  <author initials="R" surname="Ravindranath"  fullname="Ram Mohan Ravindranath" >
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>Cessna Business Park</street>
          <city>Bangalore</city>
          <region>Karnataka</region>
          <country>India</country>
        </postal>
        <email>rmohanr@cisco.com</email>
      </address>
    </author>


                <author initials="Parthasarathi" surname="Ravindran" fullname="Parthasarathi Ravindran">
			<organization>Nokia Networks</organization>
			<address>
				<postal>
					<street/>
					<city>Bangalore</city>
					<region>Karnataka</region>
					<country>India</country>
				</postal>
				<email>partha@parthasarathi.co.in</email>
			</address>
		</author>
		<author initials="Paul" surname="Kyzivat" fullname="Paul Kyzivat">
			<organization>Huawei</organization>
			<address>
				<postal>
				    <street/>
				    <city/> 
					<region>Hudson, MA</region>
					<country>USA</country>
				</postal>
				<email>pkyzivat@alum.mit.edu</email>
			</address>
		</author>
		<date year="2016" />
		<area>Transport</area>
		<workgroup>SIPREC</workgroup>
		<abstract>
			<t>
				Session recording is a critical requirement in many communications environments such as call centers and financial trading. In some of these environments, all calls must be recorded for regulatory, compliance, and consumer protection reasons.  Recording of a session is typically performed by sending a copy of a media stream to a recording device.  This document describes the metadata model as viewed by Session Recording Server(SRS) and the Recording metadata format.
			</t>
		</abstract>
	</front>
	<middle>

 <section title="Introduction">
			<t>
				Session recording is a critical requirement in many communications environments such as call centers and financial trading.  In some of these environments, all calls must be recorded for regulatory, compliance, and consumer protection reasons.  Recording of a session is typically performed by sending a copy of a media stream to a recording device. This document focuses on the Recording metadata which describes the communication session. The document describes a metadata model as viewed by Session Recording Server(SRS) and the Recording metadata format, the requirements for which are described in <xref target="RFC6341"/> and the architecture for which is described in <xref target="RFC7245"/>.
			</t>
		</section>

		<section title="Terminology" anchor="sec-term">
			<t>
				The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
				"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
				document are to be interpreted as described in <xref target="RFC2119"/>.  This
				document only uses these key words when referencing normative
				statements in existing RFCs."

			</t>
		</section>
		<section title="Definitions">
			<t>Metadata model: An abstract representation of metadata using a Unified Modelling Language <xref target="UML-REF">(UML)</xref>  class diagram.</t>
			<t>Metadata classes: Each block in the model represents a class. A class is a construct that is used as a blueprint to create instances(called objects) of itself.  The description of each class also has representation of its attributes in a second compartment below the class name.</t>
			<t>Attributes: Attributes represent the elements listed in each of the classes. The attributes of a class are listed in the second compartment below the class name. Each instance of class conveys values for these attributes which adds to the recording's metadata.</t>
			<t>Linkages: Linkages represent the relationship between the classes in the model. Each represents a logical connection between classes(or objects) in  class diagrams(or object diagrams). The linkages used in the metadata model of this document are associations. </t>
			<t>This document also refers to the terminlogy defined in <xref target="RFC6341"/>.</t>
		</section>
		<section title ="Metadata Model">
			<t>Metadata is the information that describes recorded media and the Communication Session(CS) to which they relate. The diagram below shows a model for metadata as viewed by a SRS.
			</t>
			<t> <figure><artwork>
				<![CDATA[

          +-------------------------------+
          |    Recording Session (RS)     |
          +-------------------------------+
                |1..*           | 1..*
                |               | 
                |               | 0..*
                |        +-----------------+
+------------+  |        | Communication   |
| CSRS       |  |        |  Session (CS)   |
| Association|--+        |    Group        |
|            |  |        +-----------------+      
+------------+  |              | 0..1 
                |              |  
                |0..*          | 1..*   
+-------------------------------+ 
|   Communication Session (CS)  |
|                               |
+-------------------------------+
      | 1..*                   |0..1
+-----+                        |    
|     | 0..*                   |0..* 
| +-------------+ receives +----------------+
| | Participant |----------|  Media Streams |
| |             |0..*  0..*|                |
| |             |          |                |
| |             |          |                |
| |             |  sends   |                |
| |             |----------|                |
| |             |1.*   0..*|                |
| +-------------+          +----------------+
|        |                        |
|        |                        |
|        +------------------------+------------+
|                                              |
|                                              |
|           +------------------+    +----------------------+
|           |ParticipantCS     |    |  ParticipantStream   |       
+-----------|  Association     |    |    Association       | 
            |                  |    |                      |
            +------------------+    +----------------------+
            
				 ]]>
</artwork></figure></t>
<t>
	The metadata model is a class diagram in UML. The model describes the structure of metadata in general by showing the classes, their attributes, and the relationships among the classes. Each block in the model above represents a class. The linkages between the classes represent the relationships which can be associations or composition. The metadata is conveyed from SRC to SRS.
</t>

          <t>The model allows the capture of a snapshot of a recording's metadata at a given instant in time. Metadata changes to reflect changes in what is being recorded. For example, if a participant joins a conference, then the SRC sends the SRS a snapshot of metadata having that participant information.</t>
			<t>Some of the metadata is not required to be conveyed explicitly from the SRC to the SRS, if it can be obtained contextually by the SRS(e.g., from SIP or SDP signalling).</t>
</section>

		<section title ="Recording metadata format from SRC to SRS">
                 <t>
This section gives an overview of the Recording metadata format. Some data from the metadata model is assumed to be made available to the SRS through Session Description Protocol (SDP)<xref target="RFC4566"/>, and therefore this data is not represented in the XML document format specified in this document. SDP attributes describe different media formats like audio, video. The other metadata attributes, such as participant details, are represented in a new recording specific XML document of type 'application/rs-metadata+xml'. The SDP label attribute <xref target="RFC4574"/> provides an identifier by which a metadata XML document can refer to a specific media description in the SDP sent from the SRC to the SRS.
                 </t>
                 <t>
					 The XML document format can be used to represent either the complete metadata or a partial update to the metadata. The latter includes only elements that have changed compared to the previously reported metadata.
				 </t>
                 <section title="XML data format">
       			<t><![CDATA[
Every recording metadata XML document sent from SRC to SRS MUST contain a 'recording' element. The 'recording' element acts as a container for all other elements in this XML document.
			]]></t> 
       			<t>
A 'recording' object is an XML document. It MUST have the XML declaration and it SHOULD contain an encoding declaration in the XML declaration, e.g., <![CDATA[ "<?xml version='1.0' encoding='UTF-8'?>". ]]> If the charset parameter of the MIME content type declaration is present and it is different from the encoding declaration, the charset parameter takes precedence.
				</t>
                         <t>
Every application conforming to this specification MUST accept the UTF-8 character encoding to ensure the minimal interoperability.
				</t>
                        <t>
Syntax and semantic errors in an XML document should be reported to the originator using application specific mechanisms.
                        </t>
 <section title="Namespace">
				<t>The namespace URI for elements defined by this specification is
   the following URN:</t>

      <t>urn:ietf:params:xml:ns:recording:1</t>
                    </section>
                       <section title="recording">
				<t><![CDATA[
The 'recording' element MUST contain an xmlns namespace attribute with value as urn:ietf:params:xml:ns:recording:1. One recording element MUST be present in every recording metadata XML document.
				]]></t>
	                 <t><![CDATA[
A recording element MAY contain a <dataMode> element indicating whether the XML document is a complete document or a partial update. If no <dataMode> element is present then the default value is "complete".
                       ]]></t>
                       </section>
		</section>
            </section>
		<section title="Recording metadata classes">
			<t>
				This section describes each class of the metadata model, and the attributes of each class. This section also describes how different classes are linked and the XML element for each of them.</t>
			<section title="Recording Session">
				<t><figure><artwork>
					<![CDATA[
+-------------------------------+
| Recording Session (RS)        | 
+-------------------------------+
|                               |
|     start-time                |
|     end-time                  |
|                               |
|                               |
+-------------------------------+ 
      |1..*            | 1..* 
      |                |      
      |0..*            | 0..* 
 Communication    Communication 
 Session          Session Group(CS Group)
					]]>
				</artwork></figure></t>
				<t>Each instance of a Recording Session(RS) class namely the Recording Session Object represents a SIP session created between an SRC and SRS for the purpose of recording a Communication Session(CS). </t>
				<t><![CDATA[RS object is represented in XML schema using 'recording'  element. That in turn relies on the SIP/SDP session with which the XML document is associated to provide the attributes of the RS element. ]]></t>
				
			<section title="Attributes">
			   <t> An RS class has the following attributes:</t>
			   <t>
				<list style='symbols'>
					<t> start-time - Represents the start time of an RS object. </t>
					<t>end-time - Represents the end time of an RS object. </t>
				</list> </t>

			   <t>'start-time' and 'end-time' attribute values are derivable from Date header(if present in SIP message) in RS. In cases where Date header is not present, 'start-time' is derivable from the time at which SRS receives the notification of SIP message to setup RS and and 'end-time' is derivable from the time at which SRS receives disconnect on the RS SIP dialog. </t>
			  	
				</section>
				<section title="Linkages">
					<t>Each instance of RS has:</t>
					<t>
						<list style='symbols'>
							<t>Zero or more instances of  Communication Session Group (CSG).</t>
							<t>Zero or more instances of CS objects.</t>
						</list>
					</t>
					<t>CSs and CSGs are optional to accommodate persistent recording, where there may sometimes be none.</t>
				</section>		
			</section>

			<section title="Communication Session Group">
				<t><figure><artwork>
					<![CDATA[
 Recording Session (RS)
           | 1..*
           | 
           | 0..* 
+-------------------------------+               
| Communication Session         |
|     Group                     |
+-------------------------------+               
|  group_id                     |
|  associate-time               |
|  disassociate-time            |
|                               |
+-------------------------------+
           | 0..1                               
           |                                    
           | 1..*                               
 Communication Session (CS)
					]]>
				</artwork></figure></t>
			
				<t>
					One instance of a Communication Session Group(CS-Group) class namely the Communication Session Group object provides  association or linking of Communication Sessions. 
				</t>
				<t><![CDATA[ CS-Group object is represented in XML schema using 'group' element. ]]> </t>
				<section title="Attributes">
				   <t> A CS-Group has the following attributes: 
					<list style='symbols'>
						<t>group_id - This is to group different CSs that are related. SRC (or SRS) is responsible for ensuring the uniqueness of 'group_id' in case multiple SRC interacts with the same SRS. The mechanism by which SRC groups the CS is outside the scope of SIPREC. </t>
						<t>associate-time - This is the time when a grouping is formed. The rules that determine how a grouping of different CS objects is done by SRC is outside the scope of SIPREC.</t>
						<t>disassociate-time - 'disassociate-time' for CS-Group is calculated by SRC as the time when the grouping ends.</t>
					</list>
				   </t>
				</section>
				<section title="Linkages">
					<t>
The linkages between CS-Group class and other classes are associations. 
A CS-Group is associated with RS and CS in the following manner:</t>
					<t>
						<list style='symbols'>
							<t> There are one or more RS objects per CS-Group. </t>
							<t>Each CS-Group object has to be associated with one or more RS. Here each RS can be setup by the potentially different SRCs. </t>
							<t> There are one or more CSs per CS-Group (for example, in case where the call is transferred). </t>
						</list>
					</t>
				</section>
			</section>

			<section title="Communication Session">
				<t><figure><artwork>
					<![CDATA[
 
Recording	       Communication 
Session            Session Group(CS Group)
   |1..*                  | 0..1
   |                      | 
   |0..*                  | 1..* 
+-------------------------------+
|   Communication Session (CS)  | 
+-------------------------------+ 
|   session_id                  | 
|   sipSessionID                |
|   reason                      |
|   group-ref                   |
|   start-time                  |
|   stop-time                   |
+-------------------------------+
   |                      |
   | 0..*                 |0..1              
   |                      |                  
   | 0..*                 |0..*              
Participant              Media Stream

					]]>
				</artwork></figure></t>
<t>
A Communication Session(CS) class and its object in the metadata model represents a CS and its properties needed as seen by SRC. 
</t>
<t><![CDATA[ CS object is represented in XML schema using 'session' element. ]]> </t>
				
<section title="Attributes">
   <t> A CS class has the following attributes:</t>
	   <t>
		 <list style='symbols'>
		 	<t>session_id - This attribute is used to uniquely identify an instance of CS object namely the session XML element with in the metadata XML document. 'session_id' is generated using the rules mentioned in <xref target="sec-uuid"/>.</t>

		 	<t>reason - This represents the reason why a CS was terminated.  The value for this attribute is derived from SIP Reason header <xref target="RFC3326"/> of CS.  There MAY be multiple instances of the 'reason' XML element inside a 'session' element.  The 'reason' XML element has 'protocol' as an attribute, which indicates the protocol from which the reason string is derived. The default value for protocol attribute is "SIP". The 'reason' element can be derived from a SIP Reason header in the CS.</t>

		 	<t>sipSessionID - This attribute carries sip Session-ID defined in <xref target="I-D.ietf-insipid-session-id"/>. Each CS object can have zero or more sipSessionID elements. More than one 'sipSessionID' attribute may be present in a CS. For example, if three participants A, B and C are in a conference that has a focus acting as SRC, the metadata sent from the SRC to the SRS will likely have three 'sipSessionID' elements that correspond to the SIP dialogs the focus has with each of the three participants.</t>

		 	<t>group-ref - A 'group-ref' attribute MAY be present to indicate the group(identified by 'group_id') to which the enclosing session belongs.</t>

		 	<t>start-time - This optional attribute represents start time of CS as seen by SRC.</t>

		 	<t>stop-time - This optional attribute represents stop time of CS as seen by SRC.</t>
		</list>	
	</t>
	<t>
		This document does not specify attributes relating to what should
		happen to a recording of a CS after it has been delivered to the SRS 
		(E.g., how long to retain the recording, what access controls to 
		apply.)  The SRS is assumed to behave in accordance with its local policy. The ability for the SRC to influence this policy is outside the scope of this document.  However if there are implementations where SRC desires to specify its own policy preferences, this could be sent as extension data attached to the CS.
	</t>
</section>
<section title="Linkages">
	<t>
		A CS is linked to CS-Group, Participant, Media Stream and RS classes using the association relationship. Association between CS and participant allows:
	</t>
	<t>
		<list style='symbols'>
			<t>CS to have zero or more participants</t>
				<t>
					Participant is associated with zero or more CSs. This includes participants who are not directly part of any CS. An example of such a case is participants in a premixed media stream. The SRC may have knowledge of such participants, yet not have any signaling relationship with them. This might arise if one participant in CS is a conference focus. To summarize, even if the SRC does not have direct signalling relationships with all participants in a CS, it should nevertheless create a participant object for each participant that it knows about.
					 </t>
					<t>The model also allows participants in CS that are not participants in the media. An example is the identity of a Third Party Call Control(3pcc) that has initiated a CS to two or more participants of the CS. Another example is the identity of a conference focus. Of course a focus is probably in the media, but since it may only be there as a mixer, it may not report itself as a participant in any of the media streams.
					</t>
		</list>
	</t>
	<t>Association between CS and Media Stream allows:</t>
		<t>
			<list style='symbols'>
				<t>A CS to have zero or more streams</t>
					<t>
						A stream can be associated with at most one CS. A stream in a persistent RS is not required to be associated with any CS before the CS is created and hence the zero association is allowed. 
					</t>
			</list>
		</t>
	<t>Association between CS and RS allows:</t>
		<t>
			<list style='symbols'>
				<t>Each instance of RS has zero or more instances of CS objects.
				</t>
				<t>Each CS has to be associated with one more RS. Each RS can be potentially setup by different SRCs.
				</t>
			</list>
		</t>
				</section>
</section>

	<section title="CSRSAssociation">
				<t><figure><artwork>
					<![CDATA[
					
                     1..*            0..*
   Recording                             Communication  
    Session        ----------+---------- Session
                             |
                             |
                             |
                   +-----------------------+
                   | CSRSAssociation       |
                   |                       |
                   +-----------------------+
                   | associate-time        |
                   | disassociate-time     |
                   | session_id            |
                   +-----------------------+
					]]>
				</artwork></figure></t>
				<t>
The CSRSAssociation class describes the association of a CS to an RS for a period of time. A single CS may be associated with different RSs (perhaps by different SRCs) and may be associated and dissociated several times. </t>
<t><![CDATA[ The CSRSAssociation is represented in XML using 'sessionrecordingassoc' XML element. ]]></t>
				<section title="Attributes">
					<t>CSRSAssociation class has the following attributes:</t>
					<t>
						<list style='symbols'>
							<t>associate-time - associate-time is calculated by SRC as the time it sees a CS associated to a RS</t>
							<t>disassociate-time- disassociate-time is calculated by SRC as the time it see a CS disassociate from a RS.</t>
							<t>session_id - Each instance of this class MUST have 'session_id' attribute that identifies the the CS to which this association belongs to. </t>
						</list>
					</t>
				</section>
				<section title="Linkages">
				<t>CSRSAssociation class is linked to CS and RS classes. </t>
				</section>
			</section>

			<section title="Participant">
				<t><figure><artwork>
					<![CDATA[
 Communication Session (CS)
           | 0..*
           | 
           | 0..* 
+-------------------------------+               
|          Participant          |
+-------------------------------+               
|  nameID                       |
|  participant_id               |
|                               |
+-------------------------------+
        | 0..*       1..*|                            
receives|                |sends                    
        | 0..*       0..*|                        
          Media Stream
		  
]]>
				</artwork></figure>	</t>
				<t>
					A participant class and its objects has information about a device that is part of a CS and/or contributes/consumes media stream(s) belonging to a CS.</t>
				<t><![CDATA[ Participant object is represented in XML schema using 'participant' element. ]]> </t>
				<section title="Attributes">
					<t> A participant class has two attributes:</t>
					<t>
						<list style='symbols'>
							<t>nameID - This attribute is a list of Name, Address-of-Record (AoR) defined in Section 6 of <xref target="RFC3261"/> tuples. An AoR can be one of SIP/SIPS/TEL URI, FQDN or IP address. The AoR MAY be drawn from From header or P-Asserted-Identity header or Remote-Party-ID header. SRC's local policy is used to decide on where to draw the AoR from. Name represents participant name(SIP display name) or dialed number (DN) (when known). Multiple tuples are allowed for cases where a participant has more than one AoR. (For example a P-Asserted-identity header <xref target="RFC3325"/> can have both SIP and TEL URIs.)</t>
							<t>participant_id - This attribute is used to identify the 'participant' XML element with in the XML document. It is generated using the rules mentioned in <xref target="sec-uuid"/>. This attribute MUST be used for all references to a participant within a CSG, and MAY be used to reference the same participant more globally. </t>
						</list>	</t>
					<t>This document does not specify other attributes relating to participant e.g. participant role, participant type. An SRC which has information of these attributes can indicate the same as part of extension data to participant from SRC to SRS.</t>
				
				</section>
				<section title="Linkages">
					<t>The participant class is linked to MediaStream (MS) and CS class using association relationship. The association between participant and MS allows:</t>
					<t>
					<list style='symbols'>
						<t> participant to receive zero or more media streams.</t>
						<t> participant to send zero or more media streams. (Same participant provides multiple streams e.g. audio and video)</t>
						<t>	media stream to be received by zero or more participants. Its possible, though perhaps unlikely, that a stream is generated but sent only to the SRC and SRS, not to any participant. E.g. In conferencing where all participants are on hold and the SRC is collocated with the focus. Also a media stream may be received by multiple participants (e.g. Whisper calls, side conversations).</t>
						<t>	media stream to be sent by one or more participants (pre-mixed streams).</t>
					</list></t>
					<t>
Example of a case where a participant receives zero or more streams - a supervisor may have side conversation with agent, while agent converses with customer.
					</t>
					
				</section>
			</section>
			<section title="ParticipantCSAssociation">
				<t><figure><artwork>
					<![CDATA[
					
                     1..*            0..*
   Communication
    Session        ----------+---------- Participant
                             |
                             |
                             |
                   +-------------------------+
                   | ParticipantCSAssociation|
                   |                         |
                   |                         |
                   +-------------------------+
                   | associate-time          |
                   | disassociate-time       |
                   | param                   |
                   | participant_id          |
                   | session_id              |
                   +-------------------------+
					]]>
				</artwork></figure></t>
				<t>
The ParticipantCSAssociation class describes the association of a participant to an CS for a period of time. A participant may be associated and dissociated from a CS several times. (For example, connecting to a conference, then disconnecting, then connecting again.)
				</t>
				<t><![CDATA[ ParticipantCSAssociation object is represented in XML schema using 'participantsessionassoc' element. ]]> </t>
				<section title="Attributes">
					<t>ParticipantCS association class has the following attributes:</t>
					<t>
						<list style='symbols'>
							<t>associate-time - associate-time is calculated by SRC as the time it sees a participant  associated to a CS.</t>
							<t>disassociate-time- disassociate-time is calculated by the SRC as the time it sees a participant disassociate from a CS. It is possible that a given participant can have multiple associate/disassociate times within given communication session. </t>
							<t>param - An optional attribute describing the capabilities of a participant in a CS, as defined in  <xref target="RFC3840"/>. For example, in a CS(which can be a conference), you can have participants who are playing the role of "focus". These participants does not contribute to media in the CS, however they switch the media received from one participant to every other participant in the CS. Indicating the capability of participant (here "focus") would be useful for recorder to learn about these kind of participants. The capablities are represented using 'param' XML element in the metadata. The 'param' XML element encoding defined in <xref target="RFC4235"/> is used to represent the capabilties attributes in metadata. Each participant may have zero or more capabilities. 
							 A participant may use different capabilities depending on the role it plays at a particular instance. For example, if a participant moves across different CSs (e.g., due to transfer) or is simultaneously present in different CSs with different roles.</t>

						<t>participant_id - This attribute identifies the participant to which this association belongs to. </t>
							<t>session_id - This attribute identifies the session to which this association belongs to. </t>
						</list>
					</t>
				</section>
				<section title="Linkages">
					<t>
The participantCSAssociation class is linked to participant and CS classes. 
                                        </t>
				</section>
				
			</section>
			<section title="Media Stream">
				<t><figure><artwork>
					<![CDATA[
                                Participant
                            | 0..*       1..*|
                    receives|                |sends
                            | 0..*       0..*|
                         +-------------------------+
                         |          Media Stream   |
Communication 0..1  0..* +-------------------------+
  Session    ------------|                         |
                         |  label                  |
                         |  content-type           |
                         |  stream_id              |
                         |  session_id             |
                         +-------------------------+

					]]>
				</artwork></figure></t>
				<t>A MS class (and its objects) has the properties of media as seen by SRC and sent to SRS. Different snapshots of a MS objects may be sent whenever there is a change in media (e.g. direction change like pause/resume and/or codec change and/or participant change.).</t>
				<t><![CDATA[ MS object is represented in XML schema using 'stream' element. ]]> </t>
				<section title="Attributes">
					<t>A MS class has the the following attributes:</t>
					<t>
						<list style='symbols'>
							<t>label - The label attribute within the 'stream' XML element references an SDP 'a=label' attribute that identifies an m-line within the RS SDP. That m-line carries the media stream from the SRC to the SRS.</t>
							<t>
								content-type - The content of an MS element will be described in terms of value from the <xref target="RFC4796"/> registry. If the SRC wishes to convey the Content-type to the SRS, it does so by including an 'a=content' attribute with the m-line in the RS SDP.
							</t>
							<t>stream_id - Each stream element has unique 'stream_id' attribute which helps to uniquely identify stream. This identifier is generated using the rules mentioned in <xref target="sec-uuid"/>.</t>
							<t>session_id - This attribute associates the stream with a specific session element.</t>
						</list>
					</t>	
					<t>The metadata model can include media streams that are not being delivered to the SRS. For example, an SRC offers audio, video towards SRS which in response accepts only audio. The metadata snapshots sent from SRC to SRS can continue to indicate the changes to video stream as well.</t>
				</section>
			<section title="Linkages">
				<t>A MS class is linked to participant and CS classes using the association relationship. The details of association with the participant are described in the participant class section. The details of association with CS is mentioned in the CS section. </t>
			</section>
	          
			</section>
			<section title="ParticipantStreamAssociation">
				<t><figure><artwork>
					<![CDATA[

+-------------------------+
| ParticipantStream       |
| Association             |
+-------------------------+   +----------Participant
| association-time        |   |       0..*| 1..*|
| disassociaton-time      |---+       recv|     |sends
| send                    |   |       0..*| 0..*|
| recv                    |   |           |     |
| participant_id          |   |           |     | 
+-------------------------+   |           |     |
                              +----------Media Stream

				]]>
				</artwork></figure></t>
				<t>A ParticipantStreamAssociation class describes the association of a Participant to a MS for a period of time, as a sender or as a receiver, or both. </t>
				<t><![CDATA[This class is represented in XML using  
					<participantstreamassoc> element.]]></t>
				<section title="Attributes">
					<t>A ParticipantStreamAssociation class has the following attributes:</t>
					<t>
						<list style='symbols'>
							<t>associate-time: This attribute indicates the time a participant started contributing to a MS.</t>
							<t>disassociate-time: This attribute indicates the time a participant stopped contributing to a MS.</t>
							
							<t>send: This attribute indicates whether a participant is contributing to a stream or not. This attribute has a value which points to stream represented by its unique_id. The presence of this attribute indicates that a participant is contributing to a  stream. If due to changes in CS if a participant stops contributing to a stream, a snapshot MUST be sent from SRC to SRS with no send element for that stream.</t>
							<t>recv: This attribute indicates whether a participant is receiving a media stream or not. This attribute has a value which points to a stream represented by its unique_id. The presence of this attribute indicates that a participant is receiving a stream. If due to changes in CS(like hold) the participants stops receiving a stream, a snapshot MUST be sent from SRC to SRS with no recv element for that stream.</t>
							<t>participant_id - This attributes points to the participant to which a stream element is associated with.</t>
						</list>
					</t>
					<t><![CDATA[<participantstreamassoc>]]> XML element is used to represent a participant association with a stream. The 'send' and 'recv' XML elements MUST be used to indicate whether a participant is contributing to a stream or receiving a stream.  There MAY be multiple instances of the 'send' and 'recv' XML elements inside a 'particpantstreamassoc' element.  If a metadata snapshot is sent with a 'participantstreamassoc' element that does not have any 'send' and 'recv' elements, it means that participant is neither contributing to any streams nor receiving any streams.</t>
				</section>
				<section title="Linkages">
					<t>The ParticipantStreamAssociation class is linked to participant and MS classes. </t>
				</section>
			</section>

 		      <section title="Syntax of date/time XML elements">
				<t>
<![CDATA[
XML elements <associate-time>, <disassociate-time>,  <start-time> and <stop-time> 
]]> contain strings representing the date and time.  The value of these elements MUST follow the IMPP datetime format <xref target="RFC3339"/>.  Timestamps that contain 'T' or 'Z' MUST use the capitalized forms.
				</t>
                        <t>
					As a security measure, the timestamp element MUST be included in all tuples unless the exact time of the status change cannot be determined.
				</t>
		       </section>
			<section anchor="sec-uuid" title="Unique ID format">
			   <t> A Unique id is generated in two steps:
				<list style='symbols'>
					<t>the UUID is created using <xref target="RFC4122"/> </t>
					<t>the UUID is encoded using base64 as defined in <xref target="RFC4648"/> </t>
				</list>
			   </t>
                       <t> The above mentioned unique-id mechanism SHOULD be used for each metadata element.  Multiple SRC's can refer to the same element/UUID (how each SRC learns the UUID here is out of scope of SIPREC). If two SRCs use the same UUID, it MUST retain the UUID/element mapping. If the SRS detects that a UUID is mapped to more than one element at any point of time it MUST treat this as a error. For example, the SRS may choose to reject or ignore the portions of metadata where it detects same UUID is mapped to a different elements other than the expected element (the SRS learns the mapped UUID when it sees a element for the first time in a metadata instance).</t>

                       <t>The algorithm for generating UUID MUST to chosen so that the probability of accidental conflict is as low as if a truly random algorithm was used.</t>
			</section>
			<section title="Metadata version Indicator">
                <t> Metadata version is defined to help SRC and SRS to know the version of metadata XML schema used. SRCs and SRSs that support this specification MUST use version 1 in the namespace(urn:ietf:params:xml:ns:recording:1) in all the XML documents.  Implementations may not interoperate if the version implemented by the sender is not known by the receiver.  No negotiation of versions is provided.  There is no significance to the version number although documents which update or obsolete this document (possibly including drafts of such documents) should include a higher version number if the metadata XML schema changes. </t>
			</section>
		</section>
<section title="Recording metadata snapshot request format">
			<t>SRS can explicitly request metadata snapshot from SRC. To request a metadata snapshot the SRS MUST send a SIP request message with a XML document having the namespace urn:ietf:params:xml:ns:recording:1. The XML document has the following elements. </t>
		    <t><list style='symbols'>
		    	<t><![CDATA[ A <requestsnapshot> XML element MUST be present as the top level element in the XML document. ]]></t>
		    	<t><![CDATA[A <requestreason> XML element that indicates the reason for requesting snapshot as a string MAY be present as a child XML element of <requestsnapshot>.]]></t>
		    </list>	
		    </t>
		    <t>The example below shows a metadata snapshot request from SRS.</t>
		     <t><figure title="Example metadata snapshot request from SRS to SRC">
		     <artwork>
		     	<![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
  <requestsnapshot xmlns='urn:ietf:params:xml:ns:recording:1'>
  <requestreason xml:lang="it">SRS internal error</requestreason>
</requestsnapshot>
		      ]]>
		     </artwork></figure></t>
			</section>		
<section title="SIP Recording Metadata Example">
	<section title="Complete SIP Recording Metadata Example">
				<t>
					The following example provides all the tuples involved in Recording Metadata XML body.
				</t>
				<t><figure title="Example metadata snapshot from SRC to SRS">
					<artwork>
						<![CDATA[ 
<?xml version="1.0" encoding="UTF-8"?>
  <recording xmlns='urn:ietf:params:xml:ns:recording:1'>
  <datamode>complete</datamode>
  <group group_id="7+OTCyoxTmqmqyA/1weDAg==">
    <associate-time>2010-12-16T23:41:07Z</associate-time>
    <!-- Standardized extension -->
    <call-center xmlns='urn:ietf:params:xml:ns:callcenter'>
	  <supervisor>sip:alice@atlanta.com</supervisor>
    </call-center>
    <mydata xmlns='http://example.com/my'>
	  <structure>FOO!</structure>
	  <whatever>bar</whatever>
    </mydata>
  </group>
  <session session_id="hVpd7YQgRW2nD22h7q60JQ==">
	<sipSessionID>ab30317f1a784dc48ff824d0d3715d86;
        remote=47755a9de7794ba387653f2099600ef2</sipSessionID>
	<group-ref>7+OTCyoxTmqmqyA/1weDAg==</group-ref>
	<!-- Standardized extension -->
    <mydata xmlns='http://example.com/my'>
	  <structure>FOO!</structure>
	   <whatever>bar</whatever>
	</mydata>
  </session>
  <participant participant_id="srfBElmCRp2QB23b7Mpk0w==">
	<nameID aor="sip:bob@biloxi.com">
	   <name xml:lang="it">Bob B</name>
	</nameID>
	<!-- Standardized extension -->
	<mydata xmlns='http://example.com/my'>
		<structure>FOO!</structure>
		<whatever>bar</whatever>
	</mydata>
  </participant>
  <participant participant_id="zSfPoSvdSDCmU3A3TRDxAw==">
	<nameID aor="sip:Paul@biloxy.com">
	  <name xml:lang="it">Paul</name>
	</nameID>
	<!-- Standardized extension -->
	<mydata xmlns='http://example.com/my'>
	   <structure>FOO!</structure>
	   <whatever>bar</whatever>
	</mydata>
  </participant>
  <stream stream_id="UAAMm5GRQKSCMVvLyl4rFw=="
          session_id="hVpd7YQgRW2nD22h7q60JQ==">
	<label>96</label>
  </stream>
  <stream stream_id="i1Pz3to5hGk8fuXl+PbwCw=="
           session_id="hVpd7YQgRW2nD22h7q60JQ==">
	 <label>97</label>
  </stream>
  <stream stream_id="8zc6e0lYTlWIINA6GR+3ag=="
           session_id="hVpd7YQgRW2nD22h7q60JQ==">
	<label>98</label>
  </stream>
  <stream stream_id="EiXGlc+4TruqqoDaNE76ag=="
           session_id="hVpd7YQgRW2nD22h7q60JQ==">
	<label>99</label>
  </stream>
  <sessionrecordingassoc session_id="hVpd7YQgRW2nD22h7q60JQ==">
		<associate-time>2010-12-16T23:41:07Z</associate-time>
  </sessionrecordingassoc>
  <participantsessionassoc
       participant_id="srfBElmCRp2QB23b7Mpk0w=="
       session_id="hVpd7YQgRW2nD22h7q60JQ==">
	<associate-time>2010-12-16T23:41:07Z</associate-time>
  </participantsessionassoc>
  <participantsessionassoc
       participant_id="zSfPoSvdSDCmU3A3TRDxAw=="
       session_id="hVpd7YQgRW2nD22h7q60JQ==">
	   <associate-time>2010-12-16T23:41:07Z</associate-time>
  </participantsessionassoc>
  <participantstreamassoc
       participant_id="srfBElmCRp2QB23b7Mpk0w==">
	   <send>i1Pz3to5hGk8fuXl+PbwCw==</send>
	   <send>UAAMm5GRQKSCMVvLyl4rFw==</send>
	   <recv>8zc6e0lYTlWIINA6GR+3ag==</recv>
	   <recv>EiXGlc+4TruqqoDaNE76ag==</recv>
  </participantstreamassoc>
  <participantstreamassoc
      participant_id="zSfPoSvdSDCmU3A3TRDxAw==">
	  <send>8zc6e0lYTlWIINA6GR+3ag==</send>
	  <send>EiXGlc+4TruqqoDaNE76ag==</send>
	  <recv>UAAMm5GRQKSCMVvLyl4rFw==</recv>
	  <recv>i1Pz3to5hGk8fuXl+PbwCw==</recv>
  </participantstreamassoc>
</recording>
                           ]]>
					</artwork>
				</figure></t>
			</section>
			<section title="Partial Update of Recording metadata XML body">
				<t>
					The following example provides partial update in Recording metadata XML body for the above example. The example has a snapshot that carries the disassociate-time for a participant from a session.
				</t>
				<t><figure title="Partial update of SIP Recording Example XML body">
					<artwork>
						<![CDATA[ 
  <?xml version="1.0" encoding="UTF-8"?>
<recording xmlns='urn:ietf:params:xml:ns:recording:1'>
  <datamode>partial</datamode>
    <participant
      participant_id="srfBElmCRp2QB23b7Mpk0w==">
      <nameID aor="sip:bob@biloxi.com">
		<name xml:lang="it">Bob R</name>
	  </nameID>     
    </participant>
    <participantsessionassoc
       participant_id="srfBElmCRp2QB23b7Mpk0w=="
       session_id="hVpd7YQgRW2nD22h7q60JQ==">
      <disassociate-time>2010-12-16T23:41:07Z</disassociate-time>
    </participantsessionassoc>
</recording>
                           ]]>
					</artwork>
				</figure></t>
			</section>
		</section>

		<section title="XML Schema definition for Recording metadata">
<t>
This section defines XML schema for Recording metadata document
</t>
          <t> <figure><artwork> <![CDATA[
		   
<?xml version="1.0" encoding="UTF-8"?>
   <xs:schema targetNamespace="urn:ietf:params:xml:ns:recording:1"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:tns="urn:ietf:params:xml:ns:recording:1"
      elementFormDefault="qualified"
      attributeFormDefault="unqualified">
    <!-- This import brings in the XML language attribute xml:lang-->
    <xs:import namespace="http://www.w3.org/XML/1998/namespace"
                 schemaLocation="https://www.w3.org/2001/xml.xsd"/>
    <xs:element name="recording" type="tns:recording"/>
    <xs:complexType name="recording">
        <xs:sequence>
            <xs:element name="datamode" type="tns:dataMode"
                  minOccurs="0"/>
            <xs:element name="group" type="tns:group"
                  minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="session" type="tns:session"
                  minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="participant" type="tns:participant"
                  minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="stream" type="tns:stream"
                 minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="sessionrecordingassoc"
                 type="tns:sessionrecordingassoc"
                 minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="participantsessionassoc"
                 type="tns:participantsessionassoc"
                 minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="participantstreamassoc"
                 type="tns:participantstreamassoc"
                 minOccurs="0" maxOccurs="unbounded"/>
            <xs:any namespace='##other'
                     minOccurs='0'
                     maxOccurs='unbounded'
                     processContents='lax'/>
         </xs:sequence>
    </xs:complexType>
    <xs:complexType name="group">
        <xs:sequence>
           <xs:element name="associate-time" type="xs:dateTime"
              minOccurs="0"/>
           <xs:element name="disassociate-time" type="xs:dateTime"
              minOccurs="0"/>
          <xs:any namespace='##other'
                     minOccurs='0'
                     maxOccurs='unbounded'
                     processContents='lax'/>
        </xs:sequence>
        <xs:attribute name="group_id" type="xs:base64Binary"
              use="required"/>
    </xs:complexType>
    <xs:complexType name="session">
        <xs:sequence>
           <xs:element name="sipSessionID" type="xs:string" minOccurs="0"
                   maxOccurs="unbounded"/>
           <xs:element name="reason" type="tns:reason" minOccurs="0"
                   maxOccurs="unbounded"/>
           <xs:element name="group-ref" type="xs:base64Binary"
                  minOccurs="0" maxOccurs="1"/>
           <xs:element name="start-time" type="xs:dateTime"
                  minOccurs="0" maxOccurs="1"/>
           <xs:element name="stop-time" type="xs:dateTime"
                  minOccurs="0" maxOccurs="1"/>
              <xs:any namespace='##other'
                     minOccurs='0'
                     maxOccurs='unbounded'
                     processContents='lax'/>
        </xs:sequence>
        <xs:attribute name="session_id" type="xs:base64Binary"
              use="required"/>
    </xs:complexType>
    <xs:complexType name="sessionrecordingassoc">
        <xs:sequence>
           <xs:element name="associate-time" type="xs:dateTime"
                  minOccurs="0"/>
           <xs:element name="disassociate-time" type="xs:dateTime"
                  minOccurs="0"/>
           <xs:any namespace='##other'
                     minOccurs='0'
                     maxOccurs='unbounded'
                     processContents='lax'/>
        </xs:sequence>
        <xs:attribute name="session_id" type="xs:base64Binary"
              use="required"/>
    </xs:complexType>
    <xs:complexType name="participant">
        <xs:sequence>
             <xs:element name="nameID" type="tns:nameID"
                     maxOccurs='unbounded'/>
        <xs:any namespace='##other'
                     minOccurs='0'
                     maxOccurs='unbounded'
                     processContents='lax'/>
        </xs:sequence>
        <xs:attribute name="participant_id" type="xs:base64Binary"
              use="required"/>
    </xs:complexType>
    <xs:complexType name="participantsessionassoc">
        <xs:sequence>
        <xs:element name="associate-time" type="xs:dateTime"
                  minOccurs="0"/>
        <xs:element name="disassociate-time" type="xs:dateTime"
                  minOccurs="0"/>
        <xs:element name="param" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
                <xs:attribute name="pname" type="xs:string" use="required"/>
                <xs:attribute name="pval" type="xs:string" use="required"/>
            </xs:complexType>
        </xs:element>
        <xs:any namespace='##other'
                minOccurs='0'
                maxOccurs='unbounded'
                processContents='lax'/>
        </xs:sequence>
        <xs:attribute name="participant_id" type="xs:base64Binary"
              use="required"/>
        <xs:attribute name="session_id" type="xs:base64Binary"
              use="required"/>
    </xs:complexType>
    <xs:complexType name="participantstreamassoc">
        <xs:sequence>
            <xs:element name="send" type="xs:base64Binary"
               minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="recv" type="xs:base64Binary"
               minOccurs="0" maxOccurs="unbounded"/>
               <xs:element name="associate-time" type="xs:dateTime"
                  minOccurs="0"/>
            <xs:element name="disassociate-time" type="xs:dateTime"
                  minOccurs="0"/>
               <xs:any namespace='##other'
                     minOccurs='0'
                     maxOccurs='unbounded'
                     processContents='lax'/>
        </xs:sequence>
        <xs:attribute name="participant_id" type="xs:base64Binary"
              use="required"/>
    </xs:complexType>
    <xs:complexType name="stream">
        <xs:sequence>
           <xs:element name="label" type="xs:string"
               minOccurs="0" maxOccurs="1"/>
            <xs:any namespace='##other'
                     minOccurs='0'
                     maxOccurs='unbounded'
                     processContents='lax'/>
        </xs:sequence>
        <xs:attribute name="stream_id" type="xs:base64Binary"
              use="required"/>
        <xs:attribute name="session_id" type="xs:base64Binary"/>
    </xs:complexType>
    <xs:simpleType name="dataMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="complete"/>
                <xs:enumeration value="partial"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="nameID">
      <xs:sequence>
        <xs:element name="name" type ="tns:name" minOccurs="0"
                            maxOccurs="1"/>
      </xs:sequence>
      <xs:attribute name="aor" type="xs:anyURI" use="required"/>
    </xs:complexType>
   <xs:complexType name="name">
    <xs:simpleContent>
        <xs:extension base="xs:string">
           <xs:attribute ref="xml:lang" use="optional"/>
        </xs:extension>
    </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="reason">
      <xs:simpleContent>
       <xs:extension base="xs:string">
          <xs:attribute type="xs:short" name="cause" use="required"/>
          <xs:attribute type="xs:string" name="protocol" default="SIP"/>
       </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:element name="requestsnapshot" type="tns:requestsnapshot"/>
    <xs:complexType name="requestsnapshot">
       <xs:sequence>
          <xs:element name="requestreason" type="tns:name"  minOccurs="0"/>
          <xs:any namespace='##other'
            minOccurs='0'
            maxOccurs='unbounded'
            processContents='lax'/>
       </xs:sequence>
     </xs:complexType>
</xs:schema>
            ]]>
	   </artwork></figure></t>
   </section>
   <section title="Security Considerations">
       <t>This document describes an extensive set of metadata that may be recorded by the SRS. Most of the metadata could be considered private data.  For this reason, it is RECOMMENDED that a SRC use a strong means for authentication and metadata information protection and that it apply comprehensive authorization rules when using the metadata format defined in this document. The procedures mentioned in security consideration section of <xref target="I-D.ietf-siprec-protocol"/> MUST be implemented by SRC and SRS for mutual authentication.</t>
			
				<t>It is RECOMMENDED that a SRC authenticate the SRS using the normal SIP authentication mechanisms, such as Digest as defined in Section 22 of <xref target="RFC3261"/>. The mechanism used for conveying the metadata information MUST ensure integrity and confidentially of the information. In order to achieve these, an end-to-end SIP encryption mechanism, such as S/MIME described in <xref target="RFC3261"/>, SHOULD be used.</t>
				<t>If a strong end-to-end security means (such as above) is not available, it is RECOMMENDED that a SRC use mutual hop-by-hop Transport Layer Security (TLS) authentication and encryption mechanisms described in "SIPS URI Scheme" and "Interdomain Requests" of <xref target="RFC3261"/>.</t>
				<t>Some implementations may have the SRC choose parts of metadata that can be sent to the SRS.  In other cases, SRCs may send metadata that is not appropriate for the SRS to record. Which metadata is actually recorded by the SRS must be carefully considered to balance privacy concerns with usability. Implementations MUST control what metadata is recorded, and MUST NOT save metadata sent by the SRC that does not conform to the recording policy of the SRS. Metadata in storage needs to be provided with a level of security that is comparable to that of the recording session.</t>
		
        </section>
		<section title="IANA Considerations" anchor="sec.iana-considerations">
	<t>
This specification registers a new XML namespace, and a new XML schema. 
			</t>
           <section title="SIP recording metadata Schema Registration">
                                         <t>
         URI: urn:ietf:params:xml:ns:recording:1
					</t>
                                         <t>
         Registrant Contact: IETF SIPREC working group, Ram mohan R(rmohanr@cisco.com)
					</t>
                                        <t>
         XML: the XML schema to be registered is contained in Section 8.
					</t>
                                <t>
         Its first line is <![CDATA[ <?xml version="1.0" encoding="UTF-8"?> ]]> and its last line is <![CDATA[ </xs:schema> ]]>
					</t>
		</section>
            </section>
		<section title="Acknowledgement">
			<t>
	Thanks to John Elwell, Henry Lum, Leon Portman, De Villers, Andrew Hutton, Deepanshu Gautam,Charles Eckel, Muthu Arul Mozhi, Michael Benenson, Hadriel Kaplan, Brian Rosen, Scott Orton, Ofir Roth, Mary Barnes, Ken Rehor, Gonzalo Salgueiro, Yaron Pdut and Alissa Cooper for their valuable comments and inputs.
			</t>
             	<t> Thanks to Joe Hildebrand, Peter Saint-Andre, Matt Miller for helping in writing the XML schema and Martin Thomson for validating the XML schema and providing comments on the same. </t>
		</section>
	</middle>
	<back>
 		<references title="Normative References">
            <?rfc include="reference.RFC.2119"?>
            <?rfc include="reference.RFC.2141"?>
            <?rfc include="reference.RFC.3261"?>
            <?rfc include="reference.RFC.3688"?>
            <?rfc include="reference.RFC.3339"?>
            <?rfc include="reference.RFC.4566"?>
            <?rfc include="reference.RFC.4574"?>
		<?rfc include="reference.RFC.4796"?>
		<?rfc include="reference.RFC.3840"?>
		<?rfc include="reference.RFC.4122"?>
        <?rfc include="reference.RFC.4648"?>
        <?rfc include="reference.I-D.ietf-insipid-session-id"?>
        <?rfc include="reference.RFC.6341"?>
        <?rfc include="reference.I-D.ietf-siprec-protocol"?>
            </references>
            <references title="Informative References">
			  <?rfc include="reference.RFC.7245"?>
                    <?rfc include="reference.RFC.2648"?>
                    <?rfc include="reference.RFC.3326"?>
                    <?rfc include="reference.RFC.3325"?>
                    <?rfc include="reference.RFC.4235"?>
             <reference anchor="UML-REF"
                 target="http://www.omg.org/spec/UML/2.4/">
        <front>
          <title>Unified Modeling Language (UML)</title>
          <author>
            <organization>OMG</organization>
          </author>
          <date year="2011" />
        </front>
      </reference>

		</references>
	</back>
</rfc>

